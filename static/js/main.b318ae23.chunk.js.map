{"version":3,"sources":["App.js","redux/reducers/counter.reducer.js","redux/reducers/IsLogged.reducer.js","redux/reducers/index.reducer.js","index.js"],"names":["App","counter","useSelector","store","trigger","useDispatch","react_default","a","createElement","Fragment","className","onClick","type","CounterReducer","state","arguments","length","undefined","IsLoggedReducer","allReducers","combineReducers","isLogged","createStore","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"wKA+BeA,MA3Bf,WACI,IAAMC,EAAUC,YAAY,SAACC,GAAD,OAAWA,EAAMF,UACvCG,EAAUC,cAChB,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,YAAwCT,GACxCK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,UACIG,QAAS,kBAAMP,EAAQ,CAAEQ,KAAM,eAC/BF,UAAU,WAFd,aAMAJ,EAAAC,EAAAC,cAAA,UACIG,QAAS,kBAAMP,EAAQ,CAAEQ,KAAM,eAC/BF,UAAU,WAFd,wBCTLG,EAVQ,WAAuB,IAAtBC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAC5B,QAD0CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC3BL,MACX,IAAK,YACD,OAAOE,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,ICCJI,EARS,WAA2B,IAA1BJ,EAA0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC/C,QAD+CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChCL,MACX,IAAK,UACD,OAAQE,EACZ,QACI,OAAOA,ICGJK,EAJKC,YAAgB,CAChCnB,QAASY,EACTQ,SAAUH,ICGRf,EAAQmB,YAAYH,GAE1BI,IAASC,OACLlB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,WAAP,KACInB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAUvB,MAAOA,GACbG,EAAAC,EAAAC,cAACmB,EAAD,QAGRC,SAASC,eAAe","file":"static/js/main.b318ae23.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n// import Increment from \"./redux/actions/counter.action.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nfunction App() {\n    const counter = useSelector((store) => store.counter);\n    const trigger = useDispatch();\n    return (\n        <React.Fragment>\n            <div className=\"App\">\n                <h1 className=\"App-Name\">CounterApp</h1>\n                <h3 className=\"Current-State\">Counter: {counter}</h3>\n                <div className=\"btn-group\">\n                    <button\n                        onClick={() => trigger({ type: \"INCREMENT\" })}\n                        className=\"Inc-btn\"\n                    >\n                        Increment\n                    </button>\n                    <button\n                        onClick={() => trigger({ type: \"DECREMENT\" })}\n                        className=\"Dec-btn\"\n                    >\n                        Decrement\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","const CounterReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case \"INCREMENT\":\r\n            return state + 1;\r\n        case \"DECREMENT\":\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default CounterReducer;\r\n","const IsLoggedReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case \"SIGN_IN\":\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default IsLoggedReducer;\r\n","import CounterReducer from \"./counter.reducer\";\r\nimport IsLoggedReducer from \"./IsLogged.reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    counter: CounterReducer,\r\n    isLogged: IsLoggedReducer,\r\n});\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\n// Installed-Packages\nimport { createStore } from \"redux\";\nimport allReducers from \"./redux/reducers/index.reducer.js\";\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}